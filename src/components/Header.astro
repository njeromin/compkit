---
interface Props {
	icon?: string;
	title?: string;
	subtitle?: string;
	titleHref?: string;
	mobileHideTitle?: boolean;
	position?: "sticky-top" | "fixed-top";
	type?: "solid" | "transparent" | "semi-transparent" | "adaptive";
}

const header_class = (Astro.props.type || "solid") + (Astro.props.position ? " " + Astro.props.position : "");
---

<header class={header_class}>
	<div class="left">
		<a class="title-box" href={Astro.props.titleHref}>
			{Astro.props.icon && <img class="icon" src={Astro.props.icon} alt="Logo" />}

			<span
				class={"title-text" + (Astro.props.icon && Astro.props.mobileHideTitle ? " has-icon" : "")}
			>
				{Astro.props.title && <span class="title">{Astro.props.title}</span>}

				{Astro.props.subtitle && <span class="subtitle">{Astro.props.subtitle}</span>}
			</span>
		</a>

		<slot name="left" />
	</div>

	<div class="middle">
		<slot name="middle" />
	</div>

	<div class="right">
		<slot name="right" />
	</div>
</header>

{Astro.props.type == "adaptive" && <script>
const header = document.querySelector("header.adaptive");
const scroll_el = header.parentElement;

scroll_el.addEventListener("scroll", () => {
	if (scroll_el.scrollTop === 0) {
		header.classList.remove("scrolled");
	} else {
		header.classList.add("scrolled");
	}
});
</script>}

<style lang="scss">
@use "../style/devices";
@use "../style/text";
@use "../style/z-indexes";

header {
	padding: 0.5em 1em;
	height: 3em;
	display: flex;
	align-items: center;
	@include z-indexes.navigation;
	@include text.heading;

	// Positions
	&.sticky-top {
		position: sticky;
		top: 0;
	}

	&.fixed-top {
		position: fixed;
		top: 0;
	}

	// Types
	&.solid {
		background: var(--bg-ev1);
		border-bottom: 1px solid var(--accent);
	}

	&.semi-transparent {
		backdrop-filter: blur(24px);
		background: color-mix(in srgb, var(--bg-ev0), transparent 50%);
	}

	&.transparent {
		backdrop-filter: blur(24px);
	}

	&.adaptive {
		background: transparent;
		border-bottom: 1px solid transparent;
		transition: border-bottom-color ease-in-out 300ms, background-color ease-in-out 300ms;

		&.scrolled {
			border-bottom: 1px solid var(--accent);
			backgroudn: var(--bg-ev1);
		}
	}

	// Section alignment
	& > .left,
	& > .right,
	& > .middle {
		display: flex;
		align-items: center;
	}

	& > .left {
		margin-right: auto;
	}

	& > .right {
		margin-left: auto;
	}

	// Mobile changes
	@include devices.is-phone {
		padding: 0.3em 0.75em;
		min-height: 3em;

		& :global(button) :global(a) {
			font-size: 0.75rem;
			height: 1.5rem;
			line-height: 1.5rem;
		}

		& > .left > .title-box > .title-text {
			& > .title {
				font-size: 1.05rem;
			}

			& > .subtitle {
				$font-size: 0.8 - 0.15rem;

				font-size: $font-size;
				line-height: $font-size;
			}
		}
	}
}

.title-box {
	display: flex;
	text-decoration: none;
	align-items: center;

	& > .icon {
		width: 1.4em;
		height: 1.4em;
		margin-right: 0.3em;
		color: var(--fg-base);

		@include devices.is-phone {
			width: 2em;
			height: 2em;
		}
	}

	& > .title-text {
		display: flex;
		flex-direction: column;
		justify-content: center;

		&.has-icon {
			@include devices.is-phone {
				display: none;
			}
		}

		& > .title {
			font-size: 1.2rem;
			font-weight: bold;
			color: var(--fg-base);
		}

		& > .subtitle {
			font-size: 0.8rem;
			font-weight: bold;
			color: var(--fg-dark);
		}
	}
}
</style>
